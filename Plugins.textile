If you've created a plugin for Leiningen, please add it here!

h2. Development Tools

* "lein-antlr":http://github.com/alexhall/lein-antlr Generate source code from ANTLR grammars.
* "lein-diagnostics":https://github.com/robwolfe/lein-diagnostics/ Get diagnostic info regarding versions of libraries.
* "lein-eclipse":https://github.com/abrenk/lein-eclipse Create Eclipse project descriptor files.
* "lein-lb":https://bitbucket.org/kumarshantanu/lein-lb Database migrations using "Clj-Liquibase":https://bitbucket.org/kumarshantanu/clj-liquibase
* "lein-localrepo":https://github.com/kumarshantanu/lein-localrepo Work with local Maven repository
* "lein-multi":http://github.com/maravillas/lein-multi Run tasks against multiple dependency sets (such as multiple Clojure versions) at once.
* "lein-nailgun":https://github.com/brandonw/lein-nailgun Launch a vimclojure nailgun server.
* "lein-notes":https://github.com/taweili/lein-notes See inline notes from sources.
* "lein-oneoff":https://github.com/mtyaka/lein-oneoff Simplify working with one-off, single-file clojure programs.
* "lein-project-depends":https://github.com/hugoduncan/lein-namespace-depends Output a project's namespace use/require graph.
* "lein-sub":https://github.com/kumarshantanu/lein-sub Execute tasks on sub-projects
* "slamhound":http://github.com/technomancy/slamhound Reconstruct ns forms with needed :use/:require/:import clauses.
* "swank-clojure":http://github.com/technomancy/swank-clojure Launch a Swank server for Emacs integration.

h2. Testing

* "lein-autotest":http://github.com/dakrone/lein-autotest Starts Lazytest's watch on your project for automatic testing on code change.
* "lein-cuke":http://github.com/mjul/lein-cuke Run Cucumber BDD tests.
* "lein-difftest":http://github.com/brentonashworth/lein-difftest Display diffs when a test fails.
* "lein-fail-fast":http://github.com/pjstadig/lein-fail-fast Stop testing run upon to save time in CI situations.
* "lein-junit":https://github.com/febeling/lein-junit Run JUnit tests.
* "lein-midje":https://github.com/marick/lein-midje Run "Midje":http://github.com/marick/Midje/blob/master/README.md tests.
* "lein-play":http://github.com/technomancy/lein-play Play a different sound at the end of your test runs depending on whether they pass or fail.
* "lein-reload":https://github.com/paraseba/lein-reload Reload modified files automatically every time you run your tests
* "lein-test-bang-bang":https://github.com/joegallo/lein-test-bang-bang Run each test namespace in a separate JVM.
* "lein-test-out":https://github.com/arohner/lein-test-out Run all tests and outputs to a file in junit XML or TAP format.
* "radagast":http://github.com/Seajure/radagast Get simplistic test coverage.
* "speclj":https://github.com/slagyr/speclj (pronounced "speckle") TDD/BDD framework, with auto-runner, based on "rspec":http://rspec.info/

h2. Deployment

* "lein-clojars":https://github.com/ato/lein-clojars Deploy to Clojars.
* "lein-daemon":http://github.com/arohner/lein-daemon Run app as a daemon.
* "lein-hadoop":http://github.com/ndimiduk/lein-hadoop Generate a jar containing nested libs as required for hadoop jobs.
* "lein-init-script":http://github.com/zkim/leiningen-init-script Generate *NIX daemon scripts for your project.
* "lein-tar":http://github.com/technomancy/lein-tar Create a tarball of your project and its dependencies. (formerly lein-release)
* "pallet-lein":http://github.com/pallet/pallet-lein Launch nodes and deploy "crate" packages to the cloud.

h2. Web
* "lein-noir":https://github.com/ibdknox/lein-noir Create and manage "Noir":http://www.webnoir.org projects
* "lein-beanstalk":https://github.com/weavejester/lein-beanstalk Deploy to Amazon's Elastic Beanstalk service.
* "lein-conjure":http://github.com/macourtney/Conjure Create a Conjure project and run it.
* "lein-gwt":http://github.com/teropa/lein-gwt Run the Google Web Toolkit compiler.
* "lein-ring":https://github.com/weavejester/lein-ring Ring plugin.
* "leiningen-war":http://github.com/alienscience/leiningen-war Create WAR files for use in servlet containers.

h2. Merged into Leiningen

* "lein-javac":https://github.com/antoniogarrote/lein-javac For compiling Java source (1.4+)
* "lein-plugin":http://github.com/trptcolin/lein-plugin A plugin to manage plugins. (1.4+)
* "lein-run":http://github.com/sids/lein-run Call -main functions from the command-line. (1.4+)
* "lein-retest":http://github.com/technomancy/lein-retest Run only the test namespaces which failed last time around. (1.6+)
* "lein-search":http://github.com/Licenser/lein-search Search remote repositories for artifacts. (1.6+)
